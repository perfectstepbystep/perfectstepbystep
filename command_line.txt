We use the shell which is a wrapper around the underlying complex engine
The shell is the middle-man: makes our life easy. In charge of RPL (below), background program does E
	Read, Exec, Print, Loop
'-' previous directory I was in...
Typed commands are short & terse > easy automation> achieve a lot with a few keystrokes
Best means to interact with remote resources
Can easily chain task together > repetitive & sequential tasks are handled easily
Store files that change with time in the format 'yyyy-mm-dd-extra-info' (use leading 0s in yrs days month)
	Why use '-' as separator, not '_'?
'$ls -lh' includes the file size in more human readable format

Prefixing a name with '$' means it's a variable
Use ';' to separate commands on a line
When the value of a variable might have space, we need to quote every var definition
grep = 'global/regular expression/print'
	Finds lines in a file
'find' locates files on the system

-- Remote access
	ssh username@server_ip
	Credentials via
	  - username & password
	  - ssh key added on server...
	$adduser simple_user
		password is compulsory, rest is optional
	$usermod -aG sudo simple_user
		add simple_user to the 'sudo' group so that she can use the '$sudo' command
		We can also do '$sudo gpasswd -a username sudo'
	$ssh-keygen
		Output 'id_rsa' (private key) + 'id_rsa.pub' (public key) in '~/.ssh/' directory
		Copy public key 2 server
			$ssh-copy-id simple_user@server_ip
				result: public key added to ~/.ssh/authorized_keys
			Manually
				$su - simple_user
				$mkdir ~/.ssh
				$chmod 700 ~/.ssh
				$vi ~/.ssh/authorized_keys
				paste the content of 'id_rsa.pub'
				$chmod 600 ~/.ssh/authorized_keys
				$exit
	Disable password auth
		$sudo vi /etc/ssh/sshd_config
		uncomment 'PasswordAuthentication yes', & change 'yes' to 'no'
		uncomment 'ChallengeResponseAuthentication yes', & change 'yes' to 'no'
		$sudo systemctl reload sshd # reloading ssh deamon
	Firewall on Ubuntu
		$sudo ufw app list
	Configure timezone (Ubuntu)
		$sudo dpkg-reconfigure tzdata
	configure the Network Time Protocol (NTP) synchronization
		$sudo apt-get update
		$sudo apt-get install ntp
	Create swap file
		having swap available can often be the difference between your application staying alive and crashing (DB mainly)
		using swap with SSDs can cause issues with hardware degradation over time
		twice the size of the RAM is a good starting value
		$su
			substitute user, request the password of the root
		$sudo cmd_2_execute
			asks 4 pasword of current user
		Don't edit '/etc/sudoers' manually, use 'visudo',which validate syntax b4 saving

Getting lines numbers in repository, sorted
find ./malcolm/src/ \( -iname '*.java' -o -iname '*.java' -o -iname '*.pl' \) -exec wc -l {} + | sort -n



NOTES: 
* Spaces between words is significant in the shell especially around the '=' operator
 e.g. `$PS1='$ '` is different from `PS1 = '$ '`
* Options in commands start with '_' Don't have names of files or folders starting with that
* When using file with space in them, wrap them in "" a more complicated option is to escape the space
* use the flag '-i' on rm/mv (mv silently replace eventually existing file) cmd to acknowledge destructive changes

Ref: http://swcarpentry.github.io/shell-novice/
The Art of UNIX Programming by Eric S. Raymond
https://blog.tankywoo.com/linux/2013/09/14/ssh-passwordauthentication-vs-challengeresponseauthentication.html
https://www.digitalocean.com/community/tutorials/additional-recommended-steps-for-new-ubuntu-14-04-servers
http://www.commandlinefu.com/commands/view/5498/count-lines-of-code-across-multiple-file-types-sorted-by-least-amount-of-code-to-greatest
